const CX = require("../global");
const logCommand = require("../log/logcommand");
const cx = require('consola');

async function identificador() {
    try {
        CX.command('identificadores', async (ctx) => {
            logCommand(ctx);

            try {
                const imageUrl = 'https://github.com/Yukyshiram/recursos_CDA/blob/main/ghost.png?raw=true';
                const caption = `ü™ªIdenficadores x paisü™ª
'af': afrik√°ans
'sq': alban√©s
'am': am√°rico
'ar': √°rabe
'hy': armenio
'az': azer√≠
'eu': euskera
'be': bielorruso
'bn': bengal√≠
'bs': bosnio
'bg': b√∫lgaro
'ca': catal√°n
'ceb': cebuano
'ny': chichewa
'zh-CN': chino (simplificado)
'zh-TW': chino (tradicional)
'co': corso
'hr': croata
'cs': checo
'da': dan√©s
'nl': neerland√©s
'en': ingl√©s
'eo': esperanto
'et': estonio
'tl': filipino
'fi': finland√©s
'fr': franc√©s
'fy': fris√≥n
'gl': gallego
'ka': georgiano
'de': alem√°n
'el': griego
'gu': gujarati
'ht': criollo haitiano
'ha': hausa
'haw': hawaiano
'iw': hebreo
'hi': hindi
'hmn': hmong
'hu': h√∫ngaro
'is': island√©s
'ig': igbo
'id': indonesio
'ga': irland√©s
'it': italiano
'ja': japon√©s
'jw': javan√©s
'kn': canar√©s
'kk': kazajo
'km': camboyano
'rw': kinyarwanda
'ko': coreano
'ku': kurdo
'ky': kirgu√≠s
'lo': laosiano
'la': lat√≠n
'lv': let√≥n
'lt': lituano
'lb': luxemburgu√©s
'mk': macedonio
'mg': malgache
'ms': malayo
'ml': malayalam
'mt': malt√©s
'mi': maor√≠
'mr': marat√≠
'mn': mongol
'ne': nepal√≠
'no': noruego
'ps': past√∫n
'fa': persa
'pl': polaco
'pt': portugu√©s
'pa': punjab√≠
'ro': rumano
'ru': ruso
'sm': samoano
'gd': ga√©lico escoc√©s
'sr': serbio
'st': sesotho
'sn': shona
'sd': sindhi
'si': cingal√©s
'sk': eslovaco
'sl': esloveno
'so': somal√≠
'es': espa√±ol
'su': sundan√©s
'sw': suajili
'sv': sueco
'tg': tayiko
'ta': tamil
'tt': t√°rtaro
'te': telugu
'th': tailand√©s
'tr': turco
'tk': turcomano
'uk': ucraniano
'ur': urdu
'ug': uigur
'uz': uzbeko
'vi': vietnamita
'cy': gal√©s
'xh': xhosa
'yi': yidis
'yo': yoruba
'zu': zul√∫`;
                ctx.replyWithPhoto({ url: imageUrl }, { caption: caption });
            } catch (error) {
                cx.warn("Hay un error");
            }
        });
    } catch (error) {
        cx.error('hay un error en identificador.js');
    }
}

module.exports = identificador;